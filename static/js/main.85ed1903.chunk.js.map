{"version":3,"sources":["components/KuralFetch.js","media/Thirukkural.png","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","error","post","reducer","state","action","type","payload","KuralFetch","number","useReducer","dispatch","useState","kuralnum","setKuralNum","handleSubmit","event","preventDefault","useEffect","axios","get","then","response","data","catch","GetKuralNum","onChange","onSubmit","className","min","max","DisplayKural","item","sect_tam","chapgrp_tam","chap_tam","line1","line2","tam_exp","sect_eng","chapgrp_eng","chap_eng","eng","eng_exp","Number","target","value","console","log","App","src","thirukkural","alt","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAGMA,EAAe,CACpBC,SAAS,EACTC,MAAO,GACPC,KAAM,IAGDC,EAAU,SAACC,EAAOC,GACvB,OAAQA,EAAOC,MACd,IAAK,gBACJ,MAAO,CACNN,SAAS,EACTE,KAAMG,EAAOE,QACbN,MAAO,IAET,IAAK,cACJ,MAAO,CACND,SAAS,EACTE,KAAM,GACND,MAAO,yBAET,QACC,OAAOG,IA8EKI,MA1Ef,WACC,IAEIC,EAFJ,EAA0BC,qBAAWP,EAASJ,GAA9C,mBAAOK,EAAP,KAAcO,EAAd,KACA,EAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAQMC,EAAe,SAAAC,GACpBF,EAAYL,GACZO,EAAMC,kBAGPC,qBAAU,WACTC,IAEEC,IAFF,qDAEoDP,IAClDQ,MAAK,SAAAC,GACLX,EAAS,CAAEL,KAAM,gBAAiBC,QAASe,EAASC,UAEpDC,OAAM,SAAAvB,GACNU,EAAS,CAAEL,KAAM,qBAEjB,CAACO,IAEJ,IAAMY,EAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,SACrB,OACC,uBAAMC,SAAYZ,EAAlB,UACC,sCAAQ,4DACR,uBAAOT,KAAO,SAAUsB,UAAY,kBAAkBC,IAAM,IAAIC,IAAM,OAAOJ,SAAUA,IACvF,uBAAOpB,KAAO,SAASsB,UAAY,sBAMhCG,EAAe,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACtB,OACA,qCACC,sBAAKJ,UAAY,QAAjB,UACC,qBAAIA,UAAY,QAAhB,mCAAwCI,EAAKC,SAA7C,+BAA4ED,EAAKE,YAAjF,yBAA6GF,EAAKG,SAAlH,QACA,uBACA,qBAAIP,UAAY,QAAhB,gCAAqCf,EAArC,iBACA,kCAAKmB,EAAKI,MAAV,OACA,kCAAKJ,EAAKK,SACV,qBAAIT,UAAY,QAAhB,iDACA,kCAAKI,EAAKM,cAEX,uBAAK,uBACL,sBAAKV,UAAY,QAAjB,UACC,qBAAIA,UAAY,QAAhB,mCAAwCI,EAAKO,SAA7C,8BAA2EP,EAAKQ,YAAhF,wBAA2GR,EAAKS,SAAhH,QACA,uBACA,qBAAIb,UAAY,QAAhB,gCAAqCf,EAArC,kBACA,kCAAKmB,EAAKU,IAAV,OACA,qBAAId,UAAY,QAAhB,mDACA,kCAAKI,EAAKW,cAEX,uBAAK,2BAKP,OACC,gCACC,cAAClB,EAAD,CAAaC,SA7DM,SAAAV,GACdP,EAASmC,OAAO5B,EAAM6B,OAAOC,OACnCC,QAAQC,IAAI,iBAAkBvC,IA2D7B,kCACA,uBACCL,EAAMJ,QAAW,aAAiB,cAAC+B,EAAD,CAAcC,KAAQ5B,EAAMF,OAC9DE,EAAMH,MAAQG,EAAMH,MAAQ,SCjGjB,MAA0B,wCCmB1BgD,MAff,WACE,OACE,sBAAKrB,UAAU,MAAf,UACE,+CACH,gWAIA,qBAAKsB,IAAMC,EAAaC,IAAM,gBAAgBC,OAAS,IAAKC,MAAO,MAChE,uBAAK,uBACL,cAAC,EAAD,QCFSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.85ed1903.chunk.js","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react'\nimport axios from 'axios'\n\nconst initialState = {\n\tloading: true,\n\terror: '',\n\tpost: {},\n}\n\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'FETCH_SUCCESS':\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tpost: action.payload,\n\t\t\t\terror: ''\n\t\t\t}\n\t\tcase 'FETCH_ERROR':\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tpost: {},\n\t\t\t\terror: 'Something went wrong!'\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction KuralFetch() {\n\tconst [state, dispatch] = useReducer(reducer, initialState)\n\tconst [kuralnum, setKuralNum] = useState(1);\n\tvar number;\n\n\tconst handleChange = event => {\n        number = Number(event.target.value);\n\t\tconsole.log(\"Kural Number :\" ,number);\n    }\n\n\tconst handleSubmit = event => {\n\t\tsetKuralNum(number);\n\t\tevent.preventDefault();\n    }\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t//.get(fetchKuralUrl({kural_num: num}))\n\t\t\t.get(`https://api-thirukkural.vercel.app/api?num=${kuralnum}`)\n\t\t\t.then(response => {\n\t\t\t\tdispatch({ type: 'FETCH_SUCCESS', payload: response.data })\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch({ type: 'FETCH_ERROR' })\n\t\t\t})\n\t}, [kuralnum])\n\n\tconst GetKuralNum = ({onChange}) =>{\n\t\treturn(\n\t\t\t<form onSubmit = {handleSubmit}>\n\t\t\t\t<label> <b>Enter the kural number :</b></label>\n\t\t\t\t<input type = \"number\"  className = 'kural-num-input' min = \"1\" max = \"1330\" onChange={onChange}/> \n\t\t\t\t<input type = \"submit\" className = 'submit-button'/>\n\t\t\t\t\n\t\t\t</form>\n\t\t);\n\t};\n\n\tconst DisplayKural = ({item}) => {\n\t\treturn(\n\t\t<>\t\n\t\t\t<div className = 'group'>\n\t\t\t\t<h4 className = 'head4'> {`[Section - ${item.sect_tam}]  [Chapter Group - ${item.chapgrp_tam}]  [Chapter - ${item.chap_tam}]`}</h4>\n\t\t\t\t<br/>\n\t\t\t\t<h3 className = 'head3'> {`Kural - ${kuralnum} in Tamil `}</h3>\n\t\t\t\t<p> {item.line1} </p>\n\t\t\t\t<p> {item.line2}</p>\n\t\t\t\t<h3 className = 'head3'> {`Meaning of the kural in Tamil`}</h3>\n\t\t\t\t<p> {item.tam_exp}</p>\n\t\t\t</div>\n\t\t\t<br/><br/>\n\t\t\t<div className = 'group'>\n\t\t\t\t<h4 className = 'head4'> {`[Section - ${item.sect_eng}] [Chapter Group - ${item.chapgrp_eng}] [Chapter - ${item.chap_eng}]`}</h4>\n\t\t\t\t<br />\n\t\t\t\t<h3 className = 'head3'> {`Kural - ${kuralnum} in English`}</h3>\n\t\t\t\t<p> {item.eng} </p>\n\t\t\t\t<h3 className = 'head3'> {`Meaning of the kural in English`}</h3>\n\t\t\t\t<p> {item.eng_exp}</p>\n\t\t\t</div>\n\t\t\t<br/><br/>\n\t\t</> \n\t\t);\n\t}\n\n\treturn (\n\t\t<div>\t\t\t\n\t\t\t<GetKuralNum onChange={handleChange}> Enter Kural Number </GetKuralNum>\n\t\t\t<br />\n\t\t\t{state.loading ? ('Loading...') : (<DisplayKural item = {state.post}/>)}\n\t\t\t{state.error ? state.error : null}\n\t\t</div>\n\t)\n}\n\nexport default KuralFetch","export default __webpack_public_path__ + \"static/media/Thirukkural.34a0d3b2.png\";","import './App.css';\nimport KuralFetch from './components/KuralFetch'\nimport thirukkural from './media/Thirukkural.png'\n\nfunction App() {\n  return (\n    <div className=\"App\"> \n      <h1> Thirukkural </h1>\n\t\t\t<h3>  Thirukkural , is a classic Tamil text consisting of 1,330 short couplets, or kurals, of seven words each.\n\t\t\t\t The text is divided into three major sections as virtue (aram), wealth (porul) and love (inbam), respectively.\n\t\t\t\t Further, it has 133 chapter groups with 10 kurals in each chapter. It was written by \n\t\t\t\t Thriuvalluvar.</h3>\n\t\t\t<img src= {thirukkural} alt = 'Thiruvalluvar' height ={300} width={300} />  \n      <br/><br/>\n      <KuralFetch />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}